
- include_tasks: check-OPNsense.yml

- name: clean interfaces configuration
  xml:
    path: '{{ kypo_interface_opnsense_local_config_file }}'
    xpath: '/opnsense/interfaces/*[if and if[text()="{{ item.kypo_interface_device }}"]]'
    state: absent
  delegate_to: localhost
  loop: '{{ kypo_interface_interfaces }}'
  when: kypo_interface_clean is defined and kypo_interface_clean

- name: get default gateway
  set_fact:
    kypo_interface_default_gateway: '{{ kypo_interface_interfaces | selectattr("kypo_interface_default_gateway", "defined") | first }}'

- name: prepare variables with configuration
  set_fact:
    default_gateway:
      interface: '{{ kypo_interface_default_gateway.kypo_interface_device }}'
      gateway: '{{ kypo_interface_default_gateway.kypo_interface_default_gateway }}'
      name: WAN
      ipprotocol: inet
      priority: 1
      weight: 1
      monitor_disable: 1
    firewall_rule:
      type: pass
      interface: '{{ kypo_interface_interfaces | map(attribute="kypo_interface_device") | join(",") }}'
      ipprotocol: inet
      descr: Allow everything
      direction: any
      source/any: 1
      destination/any: 1
      statetype: keep state
      quick: 1
      floating: 'yes'

- name: configure gateway
  xml:
    path: '{{ kypo_interface_opnsense_local_config_file }}'
    xpath: '/opnsense/gateways/gateway_item[name[text()="{{ default_gateway.name }}"]]/{{ item.key }}'
    pretty_print: yes
    value: '{{ item.value }}'
  loop: '{{ default_gateway | dict2items }}'
  delegate_to: localhost

- name: add firewall rule
  xml:
    path: '{{ kypo_interface_opnsense_local_config_file }}'
    xpath: '/opnsense/filter/rule[descr[text()="{{ firewall_rule.descr }}"]]/{{ item.key }}'
    pretty_print: yes
    value: '{{ item.value }}'
  loop: '{{ firewall_rule | dict2items }}'
  delegate_to: localhost

- name: install netaddr on controller
  pip:
    name: netaddr
  delegate_to: localhost

- set_fact:
    interfaces: "{{ ansible_interfaces | select('match', '^(vtnet)[0-9]+') | list }}"

- set_fact:
    interface_configs: |-
      [
      {%- for interface in interfaces -%}
        { if: {{ interface }}, settings: [{key: if, value: {{ interface }}},{key: ipaddr,value: {{ ansible_facts[interface]['ipv4'][0]['address'] }}},{key: subnet,value: {{ ('127.0.0.1/' ~ ansible_facts[interface]['ipv4'][0]['netmask']) | ipaddr('prefix') }}},{key: mtu,value: 1442},{key: enable,value: 1}]},
      {%- endfor -%}
      ]

- name: set static addressing on allnetworks
  xml:
    path: '{{ kypo_interface_opnsense_local_config_file }}'
    xpath: '/opnsense/interfaces/{{ item.0.if }}/{{ item.1.key }}'
    value: '{{ item.1.value }}'
    pretty_print: yes
  loop: "{{ interface_configs | from_yaml | subelements('settings') }}"
  delegate_to: localhost

- name: copy the modified configuration to machine
  copy:
    src: '{{ kypo_interface_opnsense_local_config_file }}'
    dest: '{{ kypo_interface_opnsense_config_file }}'
  register: configuration_copy

- name: reboot
  reboot:
  when: configuration_copy is changed
